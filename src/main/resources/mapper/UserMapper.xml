<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dage.recruit.dao.UserDAO">
    <!-- 지원자 정보 -->
    <select id="appUser" resultType="com.dage.recruit.dto.UserDTO">
        SELECT
            A.SEQ,
            A.YYYY,
            A.CNT,
            B.REMARKS,
            C.APPJOB_NAME,
            A.EMAIL,
            A.PIN,
            A.NAME,
            A.BIRTH_DAY
        FROM
            NEW_RECRUIT_TMP A
        LEFT JOIN
            THR_APPJOB_DEGREE B
        ON
            A.YYYY = B.YYYY AND A.CNT = B.DEGREES
        LEFT JOIN
            THR_APPJOB_CODE C
        ON
            A.APPLI_TYPE = C.APPJOB_CODE
        <where>
            <if test="yyyy != null and degrees != null and user_email != null">
                A.YYYY = #{yyyy}
                AND A.CNT = #{degrees}
                AND A.EMAIL = #{user_email}
            </if>
            <if test="seq != 0">
                SEQ = #{seq}
            </if>
        </where>
    </select>
    <!-- 지원자 리스트 -->
    <select id="getUserList" resultType="com.dage.recruit.dto.UserDTO">
        SELECT
            A.SEQ,
            A.YYYY,
            A.CNT,
            B.REMARKS,
            C.APPJOB_NAME,
            A.EMAIL,
            A.NAME,
            A.PIN,
            A.BIRTH_DAY
        FROM
            NEW_RECRUIT_TMP A
        LEFT JOIN
            THR_APPJOB_DEGREE B
        ON
            A.YYYY = B.YYYY AND A.CNT = B.DEGREES
        LEFT JOIN
            THR_APPJOB_CODE C
        ON
            A.APPLI_TYPE = C.APPJOB_CODE
        WHERE
            EMAIL = #{user_email}
        ORDER BY SEQ DESC
    </select>
    <!-- 지원서 미리보기 -->
    <select id="formPreview" resultType="com.dage.recruit.dto.FormDTO">
        SELECT
            A.SEQ,
            A.YYYY,
            A.CNT,
            B.REMARKS,
            C.APPJOB_NAME,
            A.EMAIL,
            A.NAME,
            A.BIRTH_DAY,
            SEX_TAG,
            (CASE
                WHEN LENGTH(PHONE) = 11 THEN REGEXP_REPLACE(PHONE, '(\d{3})(\d{4})(\d{4})', '\1-\2-\3')
                WHEN LENGTH(PHONE) = 10 THEN REGEXP_REPLACE(PHONE, '(\d{3})(\d{3})(\d{4})', '\1-\2-\3')
                WHEN LENGTH(PHONE) = 9 THEN REGEXP_REPLACE(PHONE, '(\d{3})(\d{3})(\d{3})', '\1-\2-\3')
            END) AS PHONE,
            (CASE
                WHEN PHONE_M IS NULL OR PHONE_M = '' THEN PHONE_FRONT
                WHEN PHONE_BACK IS NULL OR PHONE_BACK = '' THEN PHONE_FRONT || '-' || PHONE_M
                ELSE PHONE_FRONT || '-' || PHONE_M || '-' || PHONE_BACK
            END) AS PHONE_MOBILE,
            POST_NUM_H,
            ADDRESS_H,
            ADDRESS_H2,
            WELFARE_TAG,
            OBSTACLE_TAG,
            A1_01,
            A1_03,
            A1_04,
            A1_05,
            (CASE
                WHEN A1_06 IS NULL OR A1_06 = '' THEN ''
                WHEN A1_07 IS NULL OR A1_07 = '' THEN ''
                ELSE A1_06 || '-' || A1_07
            END) AS A1_SDT,
            (CASE
                WHEN A1_09 IS NULL OR A1_09 = '' THEN ''
                WHEN A1_10 IS NULL OR A1_10 = '' THEN ''
                ELSE A1_09 || '-' || A1_10
            END) AS A1_EDT,
            A1_12,
            (CASE
                WHEN H1_01 IS NULL OR H1_01 = '' THEN ''
                WHEN H1_02 IS NULL OR H1_02 = '' THEN ''
                ELSE H1_01 || '-' || H1_02
            END) AS H1_SDT,
            (CASE
                WHEN H1_03 IS NULL OR H1_03 = '' THEN ''
                WHEN H1_04 IS NULL OR H1_04 = '' THEN ''
                ELSE H1_03 || '-' || H1_04
            END) AS H1_EDT,
            H1_05,
            H1_06,
            H1_07,
            H1_08,
            (CASE
                WHEN H2_01 IS NULL OR H1_01 = '' THEN ''
                WHEN H2_02 IS NULL OR H2_02 = '' THEN ''
                ELSE H2_01 || '-' || H2_02
            END) AS H2_SDT,
            (CASE
                WHEN H1_03 IS NULL OR H2_03 = '' THEN ''
                WHEN H2_04 IS NULL OR H2_04 = '' THEN ''
                ELSE H2_03 || '-' || H2_04
            END) AS H2_EDT,
            H2_05,
            H2_06,
            H2_07,
            H2_08,
            H2_09,
            H2_10,
            H2_11,
            H2_12,
            H2_13,
            H2_14,
            (CASE
                WHEN H3_01 IS NULL OR H3_01 = '' THEN ''
                WHEN H3_02 IS NULL OR H3_02 = '' THEN ''
                ELSE H3_01 || '-' || H3_02
            END) AS H3_SDT,
            (CASE
                WHEN H3_03 IS NULL OR H3_03 = '' THEN ''
                WHEN H3_04 IS NULL OR H3_04 = '' THEN ''
                ELSE H3_03 || '-' || H3_04
            END) AS H3_EDT,
            H3_05,
            H3_06,
            H3_07,
            H3_08,
            H3_09,
            H3_10,
            H3_11,
            H3_12,
            H3_13,
            H3_14,
            (CASE
                WHEN H4_01 IS NULL OR H4_01 = '' THEN ''
                WHEN H4_02 IS NULL OR H4_02 = '' THEN ''
                ELSE H4_01 || '-' || H4_02
            END) AS H4_SDT,
            (CASE
                WHEN H4_03 IS NULL OR H4_03 = '' THEN ''
                WHEN H4_04 IS NULL OR H4_04 = '' THEN ''
                ELSE H4_03 || '-' || H4_04
            END) AS H4_EDT,
            H4_05,
            H4_06,
            H4_07,
            H4_08,
            H4_09,
            H4_10,
            H4_11,
            H4_12,
            H4_13,
            H4_14,
            (CASE
                WHEN H5_01 IS NULL OR H5_01 = '' THEN ''
                WHEN H5_02 IS NULL OR H5_02 = '' THEN ''
                ELSE H5_01 || '-' || H5_02
            END) AS H5_SDT,
            (CASE
                WHEN H5_03 IS NULL OR H5_03 = '' THEN ''
                WHEN H5_04 IS NULL OR H5_04 = '' THEN ''
                ELSE H5_03 || '-' || H5_04
            END) AS H5_EDT,
            H5_05,
            H5_06,
            H5_07,
            H5_08,
            H5_09,
            H5_10,
            H5_11,
            H5_12,
            H5_13,
            H5_14,
            H5_15,
            (CASE
                WHEN H6_01 IS NULL OR H6_01 = '' THEN ''
                WHEN H6_02 IS NULL OR H6_02 = '' THEN ''
                ELSE H6_01 || '-' || H6_02
            END) AS H6_SDT,
            (CASE
                WHEN H6_03 IS NULL OR H6_03 = '' THEN ''
                WHEN H6_04 IS NULL OR H6_04 = '' THEN ''
                ELSE H6_03 || '-' || H6_04
            END) AS H6_EDT,
            H6_05,
            H6_06,
            H6_07,
            H6_08,
            H6_09,
            H6_10,
            H6_11,
            H6_12,
            H6_13,
            H6_14,
            H6_15,
            (CASE
                WHEN W1_01 IS NULL OR W1_01 = '' THEN ''
                WHEN W1_02 IS NULL OR W1_02 = '' THEN ''
                ELSE W1_01 || '-' || W1_02
            END) AS W1_SDT,
            (CASE
                WHEN W1_03 IS NULL OR W1_03 = '' THEN ''
                WHEN W1_04 IS NULL OR W1_04 = '' THEN ''
                ELSE W1_03 || '-' || W1_04
            END) AS W1_EDT,
            W1_05,
            W1_06,
            W1_07,
            W1_08,
            W1_09,
            W1_10,
            W1_11,
            (CASE
                WHEN W2_01 IS NULL OR W1_01 = '' THEN ''
                WHEN W2_02 IS NULL OR W2_02 = '' THEN ''
                ELSE W2_01 || '-' || W2_02
            END) AS W2_SDT,
            (CASE
                WHEN W1_03 IS NULL OR W2_03 = '' THEN ''
                WHEN W2_04 IS NULL OR W2_04 = '' THEN ''
                ELSE W2_03 || '-' || W2_04
            END) AS W2_EDT,
            W2_05,
            W2_06,
            W2_07,
            W2_08,
            W2_09,
            W2_10,
            W2_11,
            (CASE
                WHEN W3_01 IS NULL OR W3_01 = '' THEN ''
                WHEN W3_02 IS NULL OR W3_02 = '' THEN ''
                ELSE W3_01 || '-' || W3_02
            END) AS W3_SDT,
            (CASE
                WHEN W3_03 IS NULL OR W3_03 = '' THEN ''
                WHEN W3_04 IS NULL OR W3_04 = '' THEN ''
                ELSE W3_03 || '-' || W3_04
            END) AS W3_EDT,
            W3_05,
            W3_06,
            W3_07,
            W3_08,
            W3_09,
            W3_10,
            W3_11,
            (CASE
                WHEN W4_01 IS NULL OR W4_01 = '' THEN ''
                WHEN W4_02 IS NULL OR W4_02 = '' THEN ''
                ELSE W4_01 || '-' || W4_02
            END) AS W4_SDT,
            (CASE
                WHEN W4_03 IS NULL OR W4_03 = '' THEN ''
                WHEN W4_04 IS NULL OR W4_04 = '' THEN ''
                ELSE W4_03 || '-' || W4_04
            END) AS W4_EDT,
            W4_05,
            W4_06,
            W4_07,
            W4_08,
            W4_09,
            W4_10,
            W4_11,
            (CASE
                WHEN W5_01 IS NULL OR W5_01 = '' THEN ''
                WHEN W5_02 IS NULL OR W5_02 = '' THEN ''
                ELSE W5_01 || '-' || W5_02
            END) AS W5_SDT,
            (CASE
                WHEN W5_03 IS NULL OR W5_03 = '' THEN ''
                WHEN W5_04 IS NULL OR W5_04 = '' THEN ''
                ELSE W5_03 || '-' || W5_04
            END) AS W5_EDT,
            W5_05,
            W5_06,
            W5_07,
            W5_08,
            W5_09,
            W5_10,
            W5_11,
            F1_01,
            F1_02,
            F1_03,
            (CASE
                WHEN F1_04 IS NULL OR F1_04 = '' THEN ''
                WHEN F1_05 IS NULL OR F1_05 = '' THEN ''
                WHEN F1_06 IS NULL OR F1_06 = '' THEN ''
                ELSE F1_04 || '-' || F1_05 || '-' || F1_06
            END) AS F1_DT,
            F1_07,
            F2_01,
            F2_02,
            F2_03,
            (CASE
                WHEN F2_04 IS NULL OR F2_04 = '' THEN ''
                WHEN F2_05 IS NULL OR F2_05 = '' THEN ''
                WHEN F2_06 IS NULL OR F2_06 = '' THEN ''
                ELSE F2_04 || '-' || F2_05 || '-' || F2_06
            END) AS F2_DT,
            F2_07,
            F3_01,
            F3_02,
            F3_03,
            (CASE
                WHEN F3_04 IS NULL OR F3_04 = '' THEN ''
                WHEN F3_05 IS NULL OR F3_05 = '' THEN ''
                WHEN F3_06 IS NULL OR F3_06 = '' THEN ''
                ELSE F3_04 || '-' || F3_05 || '-' || F3_06
            END) AS F3_DT,
            F3_07,
            F4_01,
            F4_02,
            F4_03,
            (CASE
                WHEN F4_04 IS NULL OR F4_04 = '' THEN ''
                WHEN F4_05 IS NULL OR F4_05 = '' THEN ''
                WHEN F4_06 IS NULL OR F4_06 = '' THEN ''
                ELSE F4_04 || '-' || F4_05 || '-' || F4_06
            END) AS F4_DT,
            F4_07,
            F5_01,
            F5_02,
            F5_03,
            (CASE
                WHEN F5_04 IS NULL OR F5_04 = '' THEN ''
                WHEN F5_05 IS NULL OR F5_05 = '' THEN ''
                WHEN F5_06 IS NULL OR F5_06 = '' THEN ''
                ELSE F5_04 || '-' || F5_05 || '-' || F5_06
            END) AS F5_DT,
            F5_07,
            C1_01,
            (CASE
                WHEN C1_02 IS NULL OR C1_02 = '' THEN ''
                WHEN C1_03 IS NULL OR C1_03 = '' THEN ''
                WHEN C1_04 IS NULL OR C1_04 = '' THEN ''
                ELSE C1_02 || '-' || C1_03 || '-' || C1_04
            END) AS C1_DT,
            C1_05,
            C1_06,
            C2_01,
            (CASE
                WHEN C2_02 IS NULL OR C2_02 = '' THEN ''
                WHEN C2_03 IS NULL OR C2_03 = '' THEN ''
                WHEN C2_04 IS NULL OR C2_04 = '' THEN ''
                ELSE C2_02 || '-' || C2_03 || '-' || C2_04
            END) AS C2_DT,
            C2_05,
            C2_06,
            C3_01,
            (CASE
                WHEN C3_02 IS NULL OR C3_02 = '' THEN ''
                WHEN C3_03 IS NULL OR C3_03 = '' THEN ''
                WHEN C3_04 IS NULL OR C3_04 = '' THEN ''
                ELSE C3_02 || '-' || C3_03 || '-' || C3_04
            END) AS C3_DT,
            C3_05,
            C3_06,
            C4_01,
            (CASE
                WHEN C4_02 IS NULL OR C4_02 = '' THEN ''
                WHEN C4_03 IS NULL OR C4_03 = '' THEN ''
                WHEN C4_04 IS NULL OR C4_04 = '' THEN ''
                ELSE C4_02 || '-' || C4_03 || '-' || C4_04
            END) AS C4_DT,
            C4_05,
            C4_06,
            C1_07 AS word,
            C2_07 AS excel,
            C3_07 AS ppt,
            C4_07 AS cad,
            C5_07 AS etc_name,
            C5_08 AS etc,
            INTRO1,
            INTRO2,
            INTRO3,
            INTRO4,
            INTRO5
        FROM
            NEW_RECRUIT_TMP A
        LEFT JOIN
            THR_APPJOB_DEGREE B
        ON
            A.YYYY = B.YYYY AND A.CNT = B.DEGREES
        LEFT JOIN
            THR_APPJOB_CODE C
        ON
            A.APPLI_TYPE = C.APPJOB_CODE
        WHERE
            SEQ = #{seq}
    </select>
    <!-- 지원서 생성(회원가입) -->
    <insert id="appRegForm" parameterType="map" useGeneratedKeys="true" keyColumn="SEQ" keyProperty="seq">
        INSERT INTO NEW_RECRUIT_TMP (
            SEQ,
            YYYY,
            CNT,
            APPLI_TYPE,
            EMAIL,
            PIN,
            NAME,
            BIRTH_DAY,
            PER_AGREE_AP
        ) VALUES (
            (select max(seq)+1 from NEW_RECRUIT_TMP),
            #{yyyy},
            #{degrees},
            #{app_code},
            #{user_email},
            #{user_password},
            #{user_name},
            #{user_birth},
            #{per_agree_ap}
        )
    </insert>
    <!-- 지원 공고 목록(회원정보) -->
    <select id="selectRemarksList" resultType="com.dage.recruit.dto.SelectCodeDTO">
        SELECT
        A.SEQ AS id,
        '(' || A.YYYY || '년 ' || A.CNT || '차)' || B.REMARKS AS text
        FROM
        NEW_RECRUIT_TMP A
        LEFT JOIN
        THR_APPJOB_DEGREE B
        ON
        A.YYYY = B.YYYY AND A.CNT = B.DEGREES
        <where>
            <if test="email != null">
                email = #{email}
            </if>
        </where>
    </select>
    <!-- 현재 비밀번호 검증 -->
    <select id="verifyPassword" resultType="java.lang.Integer">
        SELECT COUNT(*)
        FROM NEW_RECRUIT_TMP A
        LEFT JOIN THR_APPJOB_DEGREE B
        ON A.YYYY = B.YYYY AND A.CNT = B.DEGREES
        <where>
            <if test="sel_remarks != null">
                SEQ = #{sel_remarks}
            </if>
            <if test="req_email != null">
                AND EMAIL = #{req_email}
            </if>
            <if test="get_password != null">
                AND PIN = #{get_password}
            </if>
            <if test="get_name != null">
                AND NAME = #{get_name}
            </if>
            <if test="get_birth != null">
                AND BIRTH_DAY = #{get_birth}
            </if>
        </where>
    </select>
    <!-- 비밀번호 변경 -->
    <update id="changePassword">
        UPDATE
            NEW_RECRUIT_TMP
        SET
            PIN = #{new_password}
        WHERE SEQ = #{sel_remarks}
        AND EMAIL = #{req_email}
    </update>


</mapper>